<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Service Mesh on Yeqown</title>
    <link>https://www.yeqown.xyz/categories/Service-Mesh/</link>
    <description>Recent content in Service Mesh on Yeqown</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Nov 2023 22:48:59 +0800</lastBuildDate>
    <atom:link href="https://www.yeqown.xyz/categories/Service-Mesh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在istio服务网格中扩展自定义功能</title>
      <link>https://www.yeqown.xyz/2023/11/17/%E5%9C%A8istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%B8%AD%E6%89%A9%E5%B1%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 17 Nov 2023 22:48:59 +0800</pubDate>
      <guid>https://www.yeqown.xyz/2023/11/17/%E5%9C%A8istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%B8%AD%E6%89%A9%E5%B1%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%9F%E8%83%BD/</guid>
      <description>&lt;h3 id=&#34;前提&#34;&gt;&#xA;  前提&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%8d%e6%8f%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;本文假设你已经对 Kubernetes、istio 和 Envoy 有一定的了解，如果你还不了解，可以先阅读下面的文章：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kubernetes: &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&#34;&gt;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;istio: &lt;a href=&#34;https://istio.io/latest/docs/concepts/what-is-istio/&#34;&gt;https://istio.io/latest/docs/concepts/what-is-istio/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Envoy: &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/intro/what_is_envoy&#34;&gt;https://www.envoyproxy.io/docs/envoy/latest/intro/what_is_envoy&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;当然不仅限于知道这些，还需要对其有一定的实践经验，这样才能更好的理解本文的内容。当然本文也不会涉及太深，只是作为 istio 的一个入门扩展教程。&lt;/p&gt;&#xA;&lt;h3 id=&#34;为什么要扩展功能背景&#34;&gt;&#xA;  为什么要扩展功能？#背景&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e6%89%a9%e5%b1%95%e5%8a%9f%e8%83%bd%e8%83%8c%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;用通俗的话去理解 istio 的作用就是，对我们部署在 kubernetes 上的应用进行流量控制（代理），给我们提供了：流量控制、流量监控、流量安全等功能。但是在实际的使用中，我们还是会遇到一些特殊的场景，需要我们自己基于自己的业务场景去扩展一些功能，比如：ip 白名单、ip 黑名单、统一认证等。这些功能往往和具体公司的业务场景有关，因此 istio 无法直接提供这些功能，需要我们自己去扩展。&lt;/p&gt;&#xA;&lt;h4 id=&#34;传统的扩展方式&#34;&gt;&#xA;  传统的扩展方式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bc%a0%e7%bb%9f%e7%9a%84%e6%89%a9%e5%b1%95%e6%96%b9%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;在传统架构中，常常通过 API 网关这一组件来实现这一些扩展能力，常用的 API 网关有：kong、apisix、openresty，而扩展的原理就是插件，或者像 nginx/openresty 在请求链中的不同阶段提供了不同的 hook，我们可以基于这些 hook 来实现扩展功能。&lt;/p&gt;&#xA;&lt;p&gt;就我个人的经历来说，网关要么自己定制开发，要么基于openresty来实现，又或者使用一些开源的网关，如：kong、apisix，在此基础上进行二次开发。不过这些方式都是在传统API网关中去实现的，随着 Service Mesh 的发展，API网关的某些功能也被 Sidecar 代理所取代，比如：流量控制、流量监控、流量安全等。目前 Mesh 发展的趋势也是进一步在 Sidecar 代理中实现更多的功能，而不是在 API 网关中实现。&lt;/p&gt;&#xA;&lt;h3 id=&#34;envoy-的扩展能力&#34;&gt;&#xA;  Envoy 的扩展能力&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#envoy-%e7%9a%84%e6%89%a9%e5%b1%95%e8%83%bd%e5%8a%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/extending/extending&#34;&gt;https://www.envoyproxy.io/docs/envoy/latest/extending/extending&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=XdWmm_mtVXI&#34;&gt;https://www.youtube.com/watch?v=XdWmm_mtVXI&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;envoy 提供了丰富的扩展能力，Access Logger, Access Log Filter, Clusters, Listen Filter, Network Filter, HTTP Filter 等等。这一块内容非常多，如果想要了解更多，请参考官方文档。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
