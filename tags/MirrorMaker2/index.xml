<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MirrorMaker2 on Yeqown</title>
    <link>https://www.yeqown.xyz/tags/MirrorMaker2/</link>
    <description>Recent content in MirrorMaker2 on Yeqown</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 28 Sep 2025 14:59:43 +0800</lastBuildDate>
    <atom:link href="https://www.yeqown.xyz/tags/MirrorMaker2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kafka MirrorMaker2 从使用到迁移</title>
      <link>https://www.yeqown.xyz/2025/09/28/Apache-Kafka-MirrorMaker2%E4%BB%8E%E4%BD%BF%E7%94%A8%E5%88%B0%E8%BF%81%E7%A7%BB/</link>
      <pubDate>Sun, 28 Sep 2025 14:59:43 +0800</pubDate>
      <guid>https://www.yeqown.xyz/2025/09/28/Apache-Kafka-MirrorMaker2%E4%BB%8E%E4%BD%BF%E7%94%A8%E5%88%B0%E8%BF%81%E7%A7%BB/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文中使用的 Kafka 版本为 v3.3.2&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;&#xA;  引言&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%95%e8%a8%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Kafka MirrorMaker2 是 Kafka 官方提供的跨集群数据复制工具, 它是基于 Kafka Connect 框架构建的。MirrorMaker2 支持多种部署模式, 包括 Dedicated 模式和 Connect 集群模式，还有 standalone 模式。&lt;/p&gt;&#xA;&lt;p&gt;其中, Dedicated 模式有一个启动脚本 &lt;code&gt;kafka-mirror-maker.sh&lt;/code&gt;, 该脚本会启动一个独立的 MirrorMaker2 实例, 而不需要依赖 Kafka Connect 集群。Dedicated 模式适合小规模的复制任务, 但在大规模部署中, 它缺乏可扩展性和高可用性。&lt;/p&gt;&#xA;&lt;p&gt;相比之下, Connect 集群模式则是先搭建出一个 Kafka Connect 集群, 再提交 &lt;code&gt;MirrorMaker2&lt;/code&gt; 的 &lt;code&gt;MirrorSourceConnector&lt;/code&gt; 任务。这种模式下, 可以通过增加或减少 Connect 工作节点来动态调整复制任务的资源, 具备更好的弹性和容错能力。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;当然配置上也会更复杂一些, 需要管理 Connect 集群的配置和任务。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;那么, 如果我们已经在使用 Dedicated 模式部署了 MirrorMaker2, 但现在需要切换到 Connect 集群模式, 应该如何操作呢? 本文将介绍从 Dedicated 模式迁移到 Connect 集群模式时，怎么处理已经同步的 offset 进度, 以确保数据的一致性和连续性。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
