<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP on Yeqown</title>
    <link>https://www.yeqown.xyz/tags/HTTP/</link>
    <description>Recent content in HTTP on Yeqown</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Jun 2018 14:50:08 +0000</lastBuildDate>
    <atom:link href="https://www.yeqown.xyz/tags/HTTP/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>怎么才叫熟悉http协议?</title>
      <link>https://www.yeqown.xyz/2018/06/28/%E6%80%8E%E4%B9%88%E6%89%8D%E5%8F%AB%E7%86%9F%E6%82%89http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Thu, 28 Jun 2018 14:50:08 +0000</pubDate>
      <guid>https://www.yeqown.xyz/2018/06/28/%E6%80%8E%E4%B9%88%E6%89%8D%E5%8F%AB%E7%86%9F%E6%82%89http%E5%8D%8F%E8%AE%AE/</guid>
      <description>&lt;p&gt;“熟悉http协议”，肯定很多IT小伙伴都在招聘岗位上看得到过，但是怎么才叫熟悉http协议呢？抽空梳理了一下，也算是对这一部分知识的笔记吧！&lt;/p&gt;&#xA;&lt;p&gt;可能对于大部分人来说，网络web编程就是使用一些第三方库来进行请求和响应的处理，再多说一点就是这个&lt;code&gt;URI&lt;/code&gt;要使用&lt;code&gt;POST&lt;/code&gt;方法，对于携带的数据需要处理成为&lt;code&gt;formdata&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h3 id=&#34;基础知识&#34;&gt;&#xA;  基础知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Q1: HTTP协议是什么？用来干什么？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;HTTP协议是基于TCP/IP协议的应用层协议，主要规定了客户端和服务端之间的通信格式。主要作用也就是传输数据（HTML，图片，文件，查询结果）。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;网络分层&#34;&gt;&#xA;  #网络分层&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bd%91%e7%bb%9c%e5%88%86%e5%b1%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;互联网的实现分成了几层，如何分层有不同的模型（七层，五层，四层），这里按五层模型来解释：&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;（靠近用户）应用层 &amp;lt; 传输层 &amp;lt; 网络层 &amp;lt; 链接层 &amp;lt; 物理层（靠近硬件）&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;层级&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;          &lt;th&gt;拥有协议&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;物理层&lt;/td&gt;&#xA;          &lt;td&gt;传送电信号0 1&lt;/td&gt;&#xA;          &lt;td&gt;无&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;数据链路层&lt;/td&gt;&#xA;          &lt;td&gt;定义数据包;网卡MAC地址;广播的发送方式;&lt;/td&gt;&#xA;          &lt;td&gt;Ethernet 802.3; Token Ring 802.5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;网络层&lt;/td&gt;&#xA;          &lt;td&gt;引进了IP地址，用于区分不同的计算机是否属于同一网络&lt;/td&gt;&#xA;          &lt;td&gt;IP; ARP; RARP&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;传输层&lt;/td&gt;&#xA;          &lt;td&gt;建立端口到端口的通信，实现程序时间的交流，也就是socket&lt;/td&gt;&#xA;          &lt;td&gt;TCP; UDP&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;应用层&lt;/td&gt;&#xA;          &lt;td&gt;约定应用程序的数据格式&lt;/td&gt;&#xA;          &lt;td&gt;HTTP; FTP; DNS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;em&gt;每一层级，都是解决问题而诞生的，也就是他们各自作用对应的问题，推荐参考资料中的“互联网协议入门”。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;http通信流程&#34;&gt;&#xA;  #HTTP通信流程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http%e9%80%9a%e4%bf%a1%e6%b5%81%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2018/4/2/1628583763cf81ca?imageView2/0/w/1280/h/960/format/webp/ignore-error/1&#34; alt=&#34;http通信传输流&#34; /&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;拓展--三次握手和四次挥手&#34;&gt;&#xA;  #拓展&amp;ndash;三次握手和四次挥手&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8b%93%e5%b1%95--%e4%b8%89%e6%ac%a1%e6%8f%a1%e6%89%8b%e5%92%8c%e5%9b%9b%e6%ac%a1%e6%8c%a5%e6%89%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;经常在其他地方看到这些，一直不知道了解这部分有什么用，但是&lt;a href=&#34;https://en.wikipedia.org/wiki/SYN_flood&#34;&gt;&lt;code&gt;syn Flood&lt;/code&gt;&lt;/a&gt;攻击，恰恰是利用了TCP三次握手中的环节。利用假IP伪造&lt;code&gt;SYN&lt;/code&gt;请求，服务端会多次尝试发送&lt;code&gt;SYN-ACK&lt;/code&gt;给客户端，但是IP并不存在也就无法成功建立连接。在一定时间内伪造大量这种请求，会导致服务器资源耗尽无法为正常的连接服务。(注：服务器SYN连接数量有限制，SYN-ACK超时重传机制)&lt;/p&gt;&#xA;&lt;p&gt;三次握手流程：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The client requests a connection by sending a SYN (synchronize) message to the server.&lt;/li&gt;&#xA;&lt;li&gt;The server acknowledges this request by sending SYN-ACK back to the client.&lt;/li&gt;&#xA;&lt;li&gt;The client responds with an ACK, and the connection is established.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Tcp_normal.svg/220px-Tcp_normal.svg.png&#34; alt=&#34;TCP three-way handshake&#34; /&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
