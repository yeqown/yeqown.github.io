<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shardingsphere on Yeqown</title>
    <link>https://www.yeqown.xyz/tags/shardingsphere/</link>
    <description>Recent content in Shardingsphere on Yeqown</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Aug 2024 09:43:35 +0800</lastBuildDate>
    <atom:link href="https://www.yeqown.xyz/tags/shardingsphere/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ShardingSphere-Proxy问题几则</title>
      <link>https://www.yeqown.xyz/2024/08/18/shardingsphere-proxy%E9%97%AE%E9%A2%98%E5%87%A0%E5%88%99/</link>
      <pubDate>Sun, 18 Aug 2024 09:43:35 +0800</pubDate>
      <guid>https://www.yeqown.xyz/2024/08/18/shardingsphere-proxy%E9%97%AE%E9%A2%98%E5%87%A0%E5%88%99/</guid>
      <description>&lt;p&gt;ShardingSphere Proxy 是 Apache ShardingSphere 的一个子项目，是一个基于 MySQL 协议的数据库中间件，用于实现分库分表、读写分离等功能。在使用过程中，遇到了一些问题，记录如下。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这里主要针对的是 分库分表 的使用场景。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;问题概述&#34;&gt;&#xA;  问题概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;数据库往往是一个系统最容易出现瓶颈的点，当遇到数据库瓶颈时，我们可以通过数据拆分来缓解问题。数据拆分的方式通常分为横向拆分和纵向拆分，横向拆分即分库分表；纵向拆分即把一个库表中的字段拆分到不同的库表中去。这两种手段并不互斥，而是在实际情况中相辅相成。本文即是横向拆分相关内容。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;常见的部署方式有哪些？&lt;/li&gt;&#xA;&lt;li&gt;数据分片规则怎么配置？&lt;/li&gt;&#xA;&lt;li&gt;数据分片数应该怎么确定？&lt;/li&gt;&#xA;&lt;li&gt;数据分片后唯一索引还有用吗？&lt;/li&gt;&#xA;&lt;li&gt;数据分片后数据迁移？&lt;/li&gt;&#xA;&lt;li&gt;数据分片后如何确定实际执行 SQL 语句？&lt;/li&gt;&#xA;&lt;li&gt;数据分片后的查询优化？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;0-常见的部署方式&#34;&gt;&#xA;  0. 常见的部署方式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#0-%e5%b8%b8%e8%a7%81%e7%9a%84%e9%83%a8%e7%bd%b2%e6%96%b9%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;官方提供了两种部署方式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单机部署：将 ShardingSphere Proxy 部署在单台服务器上，用于测试和开发环境。&lt;/li&gt;&#xA;&lt;li&gt;集群部署：将 ShardingSphere Proxy 部署在多台服务器上，用于生产环境。集群模式下使用 zookeeper 来存储元数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;关于元数据，元数据是 ShardingSphere Proxy 的核心，用于存储分库分表规则、读写分离规则等信息。&#xA;官方建议使用集群模式部署 生产环境的 ShardingSphere Proxy&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;如果不按照官方的指引，选择部署了多个 Standalone 模式的 ShardingSphere Proxy，那么需要注意“&lt;em&gt;&lt;strong&gt;每个这样的 proxy 节点会有自己的元信息，他们之间并不互通&lt;/strong&gt;&lt;/em&gt;”。在这些情况下会出现节点之间元数据不一致的问题，参看如下测试：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 启动 3 个 standalone 模式的 ShardingSphere Proxy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          +-------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          |  LB   |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          +-------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                              |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                |-------------|--------------|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                |             |              |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            +-------+     +-------+       +-------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            | Node1 |     | Node2 |       | Node3 |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            +-------+     +-------+       +-------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;初始表结构如下：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
